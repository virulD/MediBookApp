name: Build APK (Simple)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make Gradlew Executable
      run: chmod +x android/gradlew
      
    - name: Clean and Build
      run: |
        cd android
        ./gradlew clean
        ./gradlew assembleDebug
      env:
        ANDROID_HOME: ${{ env.ANDROID_HOME }}
        GRADLE_OPTS: "-Dorg.gradle.daemon=false"
        
    - name: Check for APK
      run: |
        echo "Checking for APK files..."
        find android/app/build/outputs -name "*.apk" -type f
        if [ -f "android/app/build/outputs/apk/debug/app-debug.apk" ]; then
          echo "✅ Debug APK found"
          ls -lh android/app/build/outputs/apk/debug/app-debug.apk
        else
          echo "❌ Debug APK not found"
          exit 1
        fi
        
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: MediBookApp-Debug-APK
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30 