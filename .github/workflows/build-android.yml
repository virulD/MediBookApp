name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make Gradlew executable
      run: chmod +x android/gradlew
      
    - name: Build Android APK
      run: |
        cd android
        ./gradlew clean
        ./gradlew assembleRelease --stacktrace
      env:
        ANDROID_HOME: ${{ env.ANDROID_HOME }}
        GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs=-Xmx4096m"
        
    - name: Check APK exists
      run: |
        if [ -f "android/app/build/outputs/apk/release/app-release.apk" ]; then
          echo "✅ APK created successfully"
          ls -lh android/app/build/outputs/apk/release/app-release.apk
        else
          echo "❌ APK not found"
          exit 1
        fi
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: MediBookApp-APK
        path: android/app/build/outputs/apk/release/app-release.apk
        retention-days: 30
        
    - name: Upload APK to Release (if tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: android/app/build/outputs/apk/release/app-release.apk
        asset_name: MediBookApp-${{ github.ref_name }}.apk
        asset_content_type: application/vnd.android.package-archive 